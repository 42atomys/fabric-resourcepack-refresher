name: Trigger release
on:
  push:
    branches:
      - main
    paths:
      - gradle.properties
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (ex: 1.0.0-1.20.1)'
        required: true

permissions:
  contents: write
  id-token: write
  attestations: write
  
jobs:
  detect_versions:
    name: Detect version change
    runs-on: ubuntu-latest
    outputs:
      trigger: ${{ steps.mod_versions.outputs.trigger }}
      version: ${{ steps.mod_versions.outputs.version }}
      mod_version: ${{ steps.mod_versions.outputs.mod_version }}
      minecraft_version: ${{ steps.mod_versions.outputs.minecraft_version }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Check for version change
      id: mod_versions
      run: |
        git fetch origin main
        DIFF=$(git diff --unified=0 HEAD~1..HEAD gradle.properties)
        echo "$DIFF"
        if echo "$DIFF" | grep -q "^+mod_version="; then
          VERSIONS=$(echo "$DIFF" | grep "^+mod_version=" | sed 's/+mod_version=//')
          echo "trigger=true" >> $GITHUB_OUTPUT
          echo "version=$VERSIONS" >> $GITHUB_OUTPUT
          echo "mod_version=$(echo $VERSIONS | cut -d '-' -f 1)" >> $GITHUB_OUTPUT
          echo "minecraft_version=$(echo $VERSIONS | cut -d '-' -f 2)" >> $GITHUB_OUTPUT
        else
          echo "trigger=false" >> $GITHUB_OUTPUT
        fi

  create_tag:
    name: Create tag for release
    runs-on: ubuntu-latest
    needs: detect_versions
    steps:
    - uses: actions/checkout@v4
    - name: Create tag and push
      id: create_tag
      if: needs.detect_versions.outputs.trigger == 'true'
      run: |
        tag=${{ needs.detect_versions.outputs.version }}
        message='build(ci): release ${{ needs.detect_versions.outputs.mod_version }} for minecraft ${{ needs.detect_versions.outputs.minecraft_version }}'
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git tag "${tag}" -m "${message}"
        git push origin "${tag}"
  
  release:
    name: Release it ðŸš€
    uses: ./.github/workflows/build-and-publish.yaml
    needs: [detect_versions, create_tag]
    with:
      version: ${{ needs.detect_versions.outputs.version }}
    
